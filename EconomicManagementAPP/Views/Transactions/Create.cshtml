@model CreateTransactionViewModel
@{
    ViewData["Title"] = "Transactions";
}


<h1>Register Transaction</h1>
<h5>A transaction allows you to indicate your income and expenses</h5>

<form asp-action="Create">
<div asp-validation-summary=ModelOnly class="text-danger"></div>
  <div class="mb-3">
        <label asp-for="TransactionDate" class="form-label"></label>
        <input asp-for="TransactionDate" class="form-control" />
        <span asp-validation-for="TransactionDate" class="text-danger"></span>
    </div>

  <div class="mb-3">
        <label asp-for="AccountId" class="form-label"></label>
        <select asp-for="AccountId" asp-items="Model.Accounts" class="form-select"></select>
        <span asp-validation-for="AccountId" class="text-danger"></span>
    </div>

  <div class="mb-3">
        <label asp-for="OperationTypesId" class="form-label"></label>
        <select asp-for="OperationTypesId" asp-items="Html.GetEnumSelectList<OperationTypes>()" class="form-select"></select>
        <span asp-validation-for="OperationTypesId" class="text-danger"></span>
    </div>

  <div class="mb-3">
        <label asp-for="CategoryId" class="form-label"></label>
        <select asp-for="CategoryId" asp-items="Model.Categories" class="form-select" ></select>
        <span asp-validation-for="CategoryId" class="text-danger"></span>
    </div>

  <div class="mb-3">
        <label asp-for="Total" class="form-label"></label>
        <input asp-for="Total" class="form-control" />
        <span asp-validation-for="Total" class="text-danger"></span>
    </div>

  <div class="mb-3">
        <label asp-for="Description" class="form-label"></label>
        <textarea asp-for="Description" class="form-control"></textarea>
        <span asp-validation-for="Description" class="text-danger"></span>
    </div>

    <button type="submit" class="btn btn-primary">Create</button>
    <a class="btn btn-secondary" asp-action="Index">Cancel</a>
</form>


@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>

      const urlGetCategories = '@Url.Action("GetCategories")';

      $(function() {
          $("#OperationTypesId").change(async function(){
              const selectedValue = $(this).val();

              const response = await fetch(urlGetCategories, {
                method: 'POST',
                body: selectedValue,
                headers: {
                  'Content-Type': 'application/json'
                }
              });
              const json = await response.json();

          const options = json.map(category => `<option value=${category.value}>${category.text}</option>`);
          $("#CategoryId").html(options);
        })
    })
    </script>
}
